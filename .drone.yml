workspace:
  base: /drone
  path: src/github.com/owncloud-docker/server

branches:
  - master

clone:
  git:
    image: plugins/git:1
    pull: true

pipeline:
  tarball:
    image: plugins/download:1
    pull: true
    secrets: [ download_username, download_password ]
    source: https://download.owncloud.org/community/owncloud-10.0.10.tar.bz2
    sha256: a2efe484678c1659b9640ea247746a2174d77870d29c7d60abd565c20eb5aa84

  ldap:
    image: plugins/download:1
    pull: true
    source: https://github.com/owncloud/user_ldap/releases/download/v0.11.0/user_ldap.tar.gz
    sha256: f89b4ea5b519f30b2ceefca2cca82af5f961dc04c29dea2a7c477b1d11f1c303

  wait:
    image: owncloud/ubuntu:latest
    pull: true
    commands:
      - wait-for-it -t 600 docker:2375

  build:
    image: toolhippie/docker:latest
    pull: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - docker build -t owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} .

  smoketest-prepare-testsuite:
    image: owncloudci/php
    pull: true
    commands:
      - mkdir -p /drone/owncloud-smoketest
      - wget -qO- "https://download.owncloud.org/community/owncloud-daily-stable10-qa.tar.bz2" | tar -xj -C /drone/owncloud-smoketest --strip 1
      - cat /drone/owncloud-smoketest/version.php

  smoketest-create-docker-network:
    image: toolhippie/docker:latest
    pull: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - docker network create oc

  smoketest-redis:
    image: toolhippie/docker:latest
    pull: true
    detach: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - docker run --network=oc --name redis --network-alias redis library/redis:4

  smoketest-database:
    image: toolhippie/docker:latest
    pull: true
    detach: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - MYSQL_ROOT_PASSWORD=owncloud
      - MYSQL_USER=owncloud
      - MYSQL_PASSWORD=owncloud
      - MYSQL_DATABASE=owncloud
    commands:
      - |
        docker run --network=oc --name db --network-alias db \
        -e MYSQL_ROOT_PASSWORD \
        -e MYSQL_USER \
        -e MYSQL_PASSWORD \
        -e MYSQL_DATABASE \
        library/mysql:5.7

  smoketest-mailhog:
    image: toolhippie/docker:latest
    pull: true
    detach: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - docker run -p 1025:1025 -p 8025:8025 --network=oc --network-alias email --name email mailhog/mailhog:latest

  smoketest-server:
    image: toolhippie/docker:latest
    pull: true
    detach: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - DEBUG=true
      - OWNCLOUD_REDIS_HOST=redis
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=owncloud
      - OWNCLOUD_DB_PASSWORD=owncloud
      - OWNCLOUD_DB_HOST=db
      - OWNCLOUD_APPS_INSTALL=https://github.com/owncloud/testing/releases/download/latest/testing.tar.gz
      - OWNCLOUD_APPS_ENABLE=testing
    commands:
      - |
        docker run \
        --network=oc \
        --name owncloud \
        -e DEBUG \
        -p 8000:8080 \
        -e OWNCLOUD_APPS_INSTALL \
        -e OWNCLOUD_APPS_ENABLE \
        -e OWNCLOUD_REDIS_HOST \
        -e OWNCLOUD_DB_TYPE \
        -e OWNCLOUD_DB_NAME \
        -e OWNCLOUD_DB_USERNAME \
        -e OWNCLOUD_DB_PASSWORD \
        -e OWNCLOUD_DB_HOST \
        --network=oc \
        owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}

  wait-for-owncloud:
    image: owncloud/ubuntu:latest
    pull: true
    commands:
      - wait-for-it -t 600 docker:8000

  run-api-smoke-test:
    image: owncloudci/php
    pull: true
    environment:
      - TEST_SERVER_URL=http://docker:8000
      - SKELETON_DIR=/mnt/data/apps/testing/data/apiSkeleton
    commands:
      - cd /drone/owncloud-smoketest/tests/acceptance
      - bash run.sh --remote --tags "@smokeTest&&~@skip" --type api

  run-ui-smoke-test:
    image: owncloudci/php
    pull: true
    environment:
      - BROWSER=chrome
      - SELENIUM_HOST=selenium
      - SELENIUM_PORT=4444
      - PLATFORM=Linux
      - MAILHOG_HOST=email
      - LOCAL_MAILHOG_HOST=docker
      - TEST_SERVER_URL=http://docker:8000
      - SKELETON_DIR=/mnt/data/apps/testing/data/webUISkeleton
    commands:
      - cd /drone/owncloud-smoketest/tests/acceptance
      - bash run.sh --remote --tags "@smokeTest&&~@skip" --type webUI

  prepublish:
    image: toolhippie/docker:latest
    pull: true
    secrets: [ docker_username, docker_password ]
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - docker push owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}
    when:
      event: [ push, pull_request ]

  clair:
    image: toolhippie/klar:latest
    pull: true
    secrets:
      - source: docker_username
        target: docker_user
      - source: docker_password
        target: docker_password
    environment:
      - CLAIR_ADDR=clair.owncloud.com
      - CLAIR_OUTPUT=High
    commands:
      - klar owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}
    when:
      event: [ push, pull_request ]

  publish:
    image: toolhippie/docker:latest
    pull: true
    secrets: [ docker_username, docker_password ]
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - docker tag owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} owncloud/server:latest
      - docker push owncloud/server:latest
      - docker tag owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} owncloud/server:latest-$(date '+%Y%m%d')
      - docker push owncloud/server:latest-$(date '+%Y%m%d')
      - docker tag owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} owncloud/server:10.0.10
      - docker push owncloud/server:10.0.10
      - docker tag owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} owncloud/server:10.0.10-$(date '+%Y%m%d')
      - docker push owncloud/server:10.0.10-$(date '+%Y%m%d')
      - docker tag owncloud/server:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} owncloud/server:10.0
      - docker push owncloud/server:10.0
    when:
      event: [ push ]

  cleanup:
    image: toolhippie/jq:latest
    pull: true
    secrets: [ docker_username, docker_password ]
    commands:
      - |
        TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "'"$DOCKER_USERNAME"'", "password": "'"$DOCKER_PASSWORD"'"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
        curl -sSf -o /dev/null -H "Authorization: JWT $TOKEN" -H "Content-Type: application/json" -X DELETE https://hub.docker.com/v2/repositories/owncloud/server/tags/${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}/
    when:
      event: [ push, pull_request ]
      status: [ success, failure ]

  microbadger:
    image: plugins/webhook:1
    pull: true
    secrets: [ webhook_urls ]
    when:
      local: false
      event: [ push ]

  slack:
    image: plugins/slack:1
    pull: true
    secrets: [ slack_webhook ]
    channel: docker
    when:
      local: false
      event: [ push ]
      status: [ changed, failure ]

services:
  docker:
    image: docker:18.04-dind
    pull: true

  selenium:
    image: selenium/standalone-chrome-debug:latest
    pull: true
